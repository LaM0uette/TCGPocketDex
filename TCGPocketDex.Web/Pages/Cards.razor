@page "/cards"
@using TCGPocketDex.SDK.Services
@using TCGPocketDex.Contracts.DTO
@inject ICardService CardService

<PageTitle>Cards</PageTitle>

<h1>All Cards</h1>

@if (_loading)
{
    <p>Loading cards...</p>
}
else if (_error is not null)
{
    <p class="text-danger">Error: @_error</p>
}
else
{
    <div style="height:80vh; overflow:auto; border:1px solid #ccc; padding:8px;">
        <div style="display:grid; grid-template-columns: repeat(auto-fill, minmax(180px, 1fr)); gap:12px;">
            @foreach (var card in _cards)
            {
                <div style="border:1px solid #e0e0e0; border-radius:8px; padding:8px; background:#fff;">
                    <div style="text-align:center;">
                        <img src=@GetCardImageUrl(card) alt=@card.Name style="max-width:100%; height:auto;" />
                    </div>
                    <div style="margin-top:6px;">
                        <strong>@card.Name</strong><br />
                        <small>@card.Collection.Code - #@card.CollectionNumber</small>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {
    private bool _loading = true;
    private string? _error;
    private List<CardOutputDTO> _cards = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _cards = await CardService.GetAllPublicDtoAsync();
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _loading = false;
        }
    }

    private static string GetCardImageUrl(CardOutputDTO card)
    {
        // en images endpoint pattern provided by user
        return $"https://localhost:7057/img/cards/en/{card.Collection.Code}-{card.CollectionNumber}.webp";
    }
}